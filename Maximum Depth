SOLUTION 1.) 
------------------------------------------------------------>>>>>

class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if root is None:
            return 0
        else:
            ldepth = self.maxDepth(root.left)
            rdepth = self.maxDepth(root.right)
            if ldepth>rdepth:
                return ldepth + 1
            else:
                return rdepth + 1

SOLUTION 2.)
---------------------------------------------------------->>>>>

class Solution:
    def minDepth(self, root):
        
        def dfs(root):
            
            if root is None:
                return 0
            
            left = dfs(root.left)
            right = dfs(root.right)
            
            if root.left and root.right:
                return 1 + min(left, right)
            elif root.left:
                return 1 + left
            else:
                return 1 + right
            
        return dfs(root)
