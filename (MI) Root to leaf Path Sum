class Solution:
    def hasPathSum(self,root, S):
        
        flag = summ = 0
        def dfs(root):
            nonlocal flag, summ
            if not root:
                return 
            if not root.left and not root.right:
                if summ+root.data == S:
                    flag = 1
            summ += root.data
            dfs(root.left)
            dfs(root.right)
            summ -= root.data
        
        dfs(root)
        return flag
        
MOST OPTIMISED 
-------------->>>>
        
class Solution:
    def hasPathSum(self,root, S):
        
        def dfs(root, target, summ):
            if not root:
                return False
            summ += root.data
            if not root.left and not root.right: 
                return summ == target
            left = dfs(root.left, target, summ)
            right = dfs(root.right, target, summ)
            return left or right
        
        return dfs(root, S, 0)
