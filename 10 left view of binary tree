# Binary tree node class for reference
class BinaryTreeNode:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

def getLeftView(root)->list:
    
    level = 0
    ls = []
    
    def rightview(node, level):
        if node is None:
            return 
        if len(ls) == level:
            ls.append(node.data)
        rightview(node.left, level+1)
        rightview(node.right, level+1)
        
    rightview(root, level)
    return ls

BEST VERSION :
+++++++++++++++>>>

def LeftView(root):
    
    d = {}
    ans = []
    def dfs(root, height):
        nonlocal d
        if not root:
            return
        if height not in d:
            d[height] = root.data
        dfs(root.left, height+1)
        dfs(root.right, height+1)
    
    dfs(root, 0)
    for v in sorted(d.keys()):
        ans.append(d[v])
    return ans
